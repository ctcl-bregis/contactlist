# ContactList - CTCL 2023
# Generated: June 22, 2023
# Purpose: Database model metadata
# THIS FILE IS AUTOMATICALLY GENERATED

from django.utils import timezone
from django.db import models
from . import choices

class ContactItem(models.Model):
    # inid, tcrd, tmod are not defined by the configuration file
    inid = models.AutoField(primary_key = True)
    tcrd = models.DateTimeField(null = True)
    tmod = models.DateTimeField(null = True)

    name = models.CharField(blank = True, max_length = 128)
    irln = models.CharField(blank = True, max_length = 128)
    loca = models.TextField(blank = True, null = True)
    dtmt = models.CharField(blank = True, max_length = 64)
    appe = models.TextField(blank = True, null = True)
    smp1 = models.CharField(blank = True, max_length = 128, choices = choices.choices_smp1)
    smu1 = models.CharField(blank = True, max_length = 64)
    smp2 = models.CharField(blank = True, max_length = 128, choices = choices.choices_smp2)
    smu2 = models.CharField(blank = True, max_length = 64)
    smp3 = models.CharField(blank = True, max_length = 128, choices = choices.choices_smp3)
    smu3 = models.CharField(blank = True, max_length = 64)
    smp4 = models.CharField(blank = True, max_length = 128, choices = choices.choices_smp4)
    smu4 = models.CharField(blank = True, max_length = 64)
    smp5 = models.CharField(blank = True, max_length = 128, choices = choices.choices_smp5)
    smu5 = models.CharField(blank = True, max_length = 64)
    smp6 = models.CharField(blank = True, max_length = 128, choices = choices.choices_smp6)
    smu6 = models.CharField(blank = True, max_length = 64)
    nphn = models.CharField(blank = True, max_length = 32)
    note = models.TextField(blank = True, null = True)


    class Meta:
        verbose_name_plural = "Contact Entries"

    def todict(self):
        return {"inid": self.inid, "name": self.name, "irln": self.irln, "loca": self.loca, "dtmt": self.dtmt, "appe": self.appe, "smp1": self.smp1, "smu1": self.smu1, "smp2": self.smp2, "smu2": self.smu2, "smp3": self.smp3, "smu3": self.smu3, "smp4": self.smp4, "smu4": self.smu4, "smp5": self.smp5, "smu5": self.smu5, "smp6": self.smp6, "smu6": self.smu6, "nphn": self.nphn, "note": self.note, "tcrd": self.tcrd, "tmod": self.tmod, }
        
    def __str__(self):
        return self.name

